// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`createWebpackConfigBase default Webpack config 1`] = `
Object {
  "bail": false,
  "cache": true,
  "devtool": "source-map",
  "mode": "development",
  "module": Object {
    "rules": Array [
      Object {
        "resource": Object {
          "or": Array [
            Object {
              "exclude": /\\[\\\\/\\\\\\\\\\\\\\\\\\]node_modules\\[\\\\/\\\\\\\\\\\\\\\\\\]/,
              "test": /\\\\\\.jsx\\?\\$/,
            },
            Object {
              "and": Array [
                Object {
                  "test": /\\\\\\.jsx\\?\\$/,
                },
                Object {
                  "or": Array [
                    Object {
                      "include": /@mapbox\\\\/batfish\\\\/\\(\\?!\\\\/node_modules\\)\\.\\*/,
                    },
                  ],
                },
              ],
            },
          ],
        },
        "use": Array [
          Object {
            "loader": "babel-loader",
            "options": Object {
              "babelrc": false,
              "cacheDirectory": true,
              "compact": true,
              "plugins": "mock-babe-plugins",
              "presets": "mock-babel-presets",
            },
          },
        ],
      },
      Object {
        "test": /<PROJECT_ROOT>\\\\/test\\\\/fixtures\\\\/get-pages-data\\.\\*\\\\\\.md\\$/,
        "use": Array [
          Object {
            "loader": "babel-loader",
            "options": Object {
              "babelrc": false,
              "cacheDirectory": true,
              "compact": true,
              "plugins": "mock-babe-plugins",
              "presets": "mock-babel-presets",
            },
          },
          Object {
            "loader": "@mapbox/jsxtreme-markdown-loader",
            "options": Object {
              "headings": true,
              "prependJs": Array [
                "import { prefixUrl, prefixUrlAbsolute } from '@mapbox/batfish/modules/prefix-url';",
                "import { routeTo, routeToPrefixed } from '@mapbox/batfish/modules/route-to';",
              ],
            },
          },
        ],
      },
      Object {
        "loader": "file-loader",
        "options": Object {
          "digest": "hex",
          "hash": "sha512",
          "name": "[name].[ext]",
        },
        "test": /\\\\\\.\\(jpeg\\|jpg\\|png\\|gif\\|webp\\|mp4\\|webm\\|woff\\|woff2\\)\\$/,
      },
      Object {
        "test": /<PROJECT_ROOT>\\\\/test\\\\/fixtures\\\\/get-pages-data\\.\\*\\\\\\.css\\$/,
        "use": Array [
          Object {
            "loader": "babel-loader",
            "options": Object {
              "babelrc": false,
              "cacheDirectory": true,
              "compact": true,
              "plugins": "mock-babe-plugins",
              "presets": "mock-babel-presets",
            },
          },
          Object {
            "loader": "react-helmet-postcss-loader",
            "options": Object {
              "postcssPlugins": Array [
                [Function],
                [Function],
                [Function],
              ],
            },
          },
        ],
      },
    ],
  },
  "output": Object {
    "filename": "[name].js",
    "path": "<PROJECT_ROOT>/_batfish_site",
    "pathinfo": true,
    "publicPath": "/assets/",
  },
  "performance": Object {
    "hints": false,
  },
  "plugins": Array [],
  "resolve": Object {
    "alias": Object {
      "@mapbox/batfish/data": "<PROJECT_ROOT>/_batfish_tmp/data",
      "batfish-internal/application-wrapper": "<PROJECT_ROOT>/src/webpack/empty-application-wrapper.js",
      "batfish-internal/context": "fake/batfish-context.js",
    },
  },
  "resolveLoader": Object {
    "alias": Object {
      "react-helmet-postcss-loader": "<PROJECT_ROOT>/src/node/react-helmet-postcss-loader.js",
    },
    "modules": Array [
      "<PROJECT_ROOT>/node_modules",
      "node_modules",
    ],
  },
}
`;

exports[`createWebpackConfigBase default production Webpack config 1`] = `
Object {
  "bail": true,
  "cache": false,
  "devtool": false,
  "mode": "production",
  "module": Object {
    "rules": Array [
      Object {
        "resource": Object {
          "or": Array [
            Object {
              "exclude": /\\[\\\\/\\\\\\\\\\\\\\\\\\]node_modules\\[\\\\/\\\\\\\\\\\\\\\\\\]/,
              "test": /\\\\\\.jsx\\?\\$/,
            },
            Object {
              "and": Array [
                Object {
                  "test": /\\\\\\.jsx\\?\\$/,
                },
                Object {
                  "or": Array [
                    Object {
                      "include": /@mapbox\\\\/batfish\\\\/\\(\\?!\\\\/node_modules\\)\\.\\*/,
                    },
                  ],
                },
              ],
            },
          ],
        },
        "use": Array [
          Object {
            "loader": "babel-loader",
            "options": Object {
              "babelrc": false,
              "cacheDirectory": false,
              "compact": true,
              "plugins": "mock-babe-plugins",
              "presets": "mock-babel-presets",
            },
          },
        ],
      },
      Object {
        "test": /<PROJECT_ROOT>\\\\/test\\\\/fixtures\\\\/get-pages-data\\.\\*\\\\\\.md\\$/,
        "use": Array [
          Object {
            "loader": "babel-loader",
            "options": Object {
              "babelrc": false,
              "cacheDirectory": false,
              "compact": true,
              "plugins": "mock-babe-plugins",
              "presets": "mock-babel-presets",
            },
          },
          Object {
            "loader": "@mapbox/jsxtreme-markdown-loader",
            "options": Object {
              "headings": true,
              "prependJs": Array [
                "import { prefixUrl, prefixUrlAbsolute } from '@mapbox/batfish/modules/prefix-url';",
                "import { routeTo, routeToPrefixed } from '@mapbox/batfish/modules/route-to';",
              ],
            },
          },
        ],
      },
      Object {
        "loader": "file-loader",
        "options": Object {
          "digest": "hex",
          "hash": "sha512",
          "name": "[name]-[hash].[ext]",
        },
        "test": /\\\\\\.\\(jpeg\\|jpg\\|png\\|gif\\|webp\\|mp4\\|webm\\|woff\\|woff2\\)\\$/,
      },
      Object {
        "test": /<PROJECT_ROOT>\\\\/test\\\\/fixtures\\\\/get-pages-data\\.\\*\\\\\\.css\\$/,
        "use": Array [
          Object {
            "loader": "babel-loader",
            "options": Object {
              "babelrc": false,
              "cacheDirectory": false,
              "compact": true,
              "plugins": "mock-babe-plugins",
              "presets": "mock-babel-presets",
            },
          },
          Object {
            "loader": "react-helmet-postcss-loader",
            "options": Object {
              "postcssPlugins": Array [
                [Function],
                [Function],
                [Function],
                [Function],
              ],
            },
          },
        ],
      },
    ],
  },
  "output": Object {
    "filename": "[name].js",
    "path": "<PROJECT_ROOT>/_batfish_site",
    "pathinfo": false,
    "publicPath": "/assets/",
  },
  "performance": Object {
    "hints": false,
  },
  "plugins": Array [],
  "resolve": Object {
    "alias": Object {
      "@mapbox/batfish/data": "<PROJECT_ROOT>/_batfish_tmp/data",
      "batfish-internal/application-wrapper": "<PROJECT_ROOT>/src/webpack/empty-application-wrapper.js",
      "batfish-internal/context": "fake/batfish-context.js",
    },
  },
  "resolveLoader": Object {
    "alias": Object {
      "react-helmet-postcss-loader": "<PROJECT_ROOT>/src/node/react-helmet-postcss-loader.js",
    },
    "modules": Array [
      "<PROJECT_ROOT>/node_modules",
      "node_modules",
    ],
  },
}
`;

exports[`createWebpackConfigBase with all Batfish config options that make a difference 1`] = `
Object {
  "bail": false,
  "cache": true,
  "devtool": "source-map",
  "mode": "development",
  "module": Object {
    "rules": Array [
      Object {
        "resource": Object {
          "or": Array [
            Object {
              "exclude": /node_modules\\\\/nothing/,
              "test": /\\\\\\.jsx\\?\\$/,
            },
            Object {
              "and": Array [
                Object {
                  "test": /\\\\\\.jsx\\?\\$/,
                },
                Object {
                  "or": Array [
                    Object {
                      "include": /@mapbox\\\\/batfish\\\\/\\(\\?!\\\\/node_modules\\)\\.\\*/,
                    },
                    Object {
                      "include": /p-queue\\(\\?!\\\\/node_modules\\)\\.\\*/,
                    },
                    Object {
                      "include": Object {
                        "exclude": "/foo/bar",
                        "include": "/foo",
                      },
                    },
                  ],
                },
              ],
            },
          ],
        },
        "use": Array [
          Object {
            "loader": "babel-loader",
            "options": Object {
              "babelrc": false,
              "cacheDirectory": true,
              "compact": true,
              "plugins": "mock-babe-plugins",
              "presets": "mock-babel-presets",
            },
          },
        ],
      },
      Object {
        "test": /<PROJECT_ROOT>\\\\/test\\\\/fixtures\\\\/get-pages-data\\.\\*\\\\\\.md\\$/,
        "use": Array [
          Object {
            "loader": "babel-loader",
            "options": Object {
              "babelrc": false,
              "cacheDirectory": true,
              "compact": true,
              "plugins": "mock-babe-plugins",
              "presets": "mock-babel-presets",
            },
          },
          Object {
            "loader": "@mapbox/jsxtreme-markdown-loader",
            "options": Object {
              "headings": true,
              "prependJs": Array [
                "const add = (x, y) => x + y;",
                "import egg from 'chicken';",
                "import { prefixUrl, prefixUrlAbsolute } from '@mapbox/batfish/modules/prefix-url';",
                "import { routeTo, routeToPrefixed } from '@mapbox/batfish/modules/route-to';",
              ],
              "remarkPlugins": Array [
                [Function],
                [Function],
              ],
            },
          },
        ],
      },
      Object {
        "loader": "file-loader",
        "options": Object {
          "digest": "hex",
          "hash": "sha512",
          "name": "[name].[ext]",
        },
        "test": /\\\\\\.\\(txt\\|config\\)\\$/,
      },
      Object {
        "test": /<PROJECT_ROOT>\\\\/test\\\\/fixtures\\\\/get-pages-data\\.\\*\\\\\\.css\\$/,
        "use": Array [
          Object {
            "loader": "babel-loader",
            "options": Object {
              "babelrc": false,
              "cacheDirectory": true,
              "compact": true,
              "plugins": "mock-babe-plugins",
              "presets": "mock-babel-presets",
            },
          },
          Object {
            "loader": "react-helmet-postcss-loader",
            "options": Object {
              "postcssPlugins": Array [
                [Function],
                [Function],
                [Function],
              ],
            },
          },
        ],
      },
      Object {
        "test": /\\\\\\.jpg\\$/,
        "use": "jpg-loader",
      },
      Object {
        "test": /\\\\\\.png\\$/,
        "use": "png-loader",
      },
    ],
  },
  "output": Object {
    "filename": "[name].js",
    "path": "<PROJECT_ROOT>/_batfish_site",
    "pathinfo": true,
    "publicPath": "/site/base/path/assets/",
  },
  "performance": Object {
    "hints": "warning",
  },
  "plugins": Array [],
  "resolve": Object {
    "alias": Object {
      "@mapbox/batfish/data": "<PROJECT_ROOT>/test/fake/temporary/directory/data",
      "batfish-internal/application-wrapper": "<PROJECT_ROOT>/test/fixtures/empty-component.js",
      "batfish-internal/context": "fake/batfish-context.js",
    },
  },
  "resolveLoader": Object {
    "alias": Object {
      "react-helmet-postcss-loader": "<PROJECT_ROOT>/src/node/react-helmet-postcss-loader.js",
    },
    "modules": Array [
      "<PROJECT_ROOT>/node_modules",
      "node_modules",
    ],
  },
}
`;
